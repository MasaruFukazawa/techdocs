DevOps
==========================================


アジャイル開発
------------------------------------------


テスト駆動開発
------------------------------------------

- テストコード付きのソースコード

- 自動化テスト

  - ユニットテスト

    - xUnit

  - 結合テスト

    - Selenium


軽量なドキュメント
------------------------------------------

- 脱エクセル

- Markdown ドキュメント

- reST ドキュメント


ソースコード/ドキュメントのバージョン管理
------------------------------------------

- インフラ構築スクリプト

  - CloudFormation / terraform

- コンテナ設定ファイル

  - Docker

    - Dockerfile

    - docker-composer.yml

- ミドルウェア構築スクリプト

  - Ansible

- ビルド スクリプト

  - CodeBuild

    - buildspec.yml

    - スクリプトファイル

- デプロイスクリプト

  - CodeDeploy

    - appspec.yml

    - スクリプトファイル
    
- アプリケーションコード

- テストコード

  - xunit

  - selenium

- データベース スクリプト

  - マイグレーションファイル

- ライブラリ

  - requirement.txt (pip) 

  - composer.json (composer)

  - package.json (npm)

- 設定ファイル

  - php.iniなどの言語設定ファイル

  - OSの設定情報

  - DNSゾーン情報

  - ファイアウォール定義

- 仕様書

  - マークダウン

  - rest ドキュメント

- アプリケーション・コンピュータ・ツールコレクションのマニュアル


クラウドインフラストラクチャ
------------------------------------------

- Infrastructure as Code

  - クラウドサービス

    - AWS / GCP / AZULE

  - インフラ構成管理

    - CloudFormation / Terraform

  - ミドルウェア/設定管理

    - Ansible

  - コンテナ/サーバレス

    - ECS / Docker

    - Lambda / ApiGateway

- 自動復旧

  - EC2AutoScaling


デプロイパイプラインの構築
------------------------------------------

- 継続的CI/CD

- バーション管理システム: GIT

- インフラ構築: CloudFormation

  - 構成/設定前の仮想マシンイメージでコンテナを作る

  - テンプレートから設定ファイルを生成する

  - サーバ、アプリケーション、サービスを再起動する

- ミドルウェア設定: Ansible

  - ミドルウェアのデプロイ、構成/設定を自動化する
  
- ビルド: CodeBuild

  - 自動テスト

  - 静的なソースコードチェック

  - コーティングスタイルチェック

  - ビルド

    - デプロイに適した形でコードをパッケージングする

- デプロイ: CodeDeploy

  - Blue/Greenデプロイ

  - 本番サーバにパッケージやファイルをコピーする

  - データベースのマイグレーションをスクリプト化し自動化する
    
  - システムが動作し、正しく構成/設定されていることを確かめるために自動スモークテストを実行する

  - テストプロシージャを実行する


学習の継続化
------------------------------------------

- バッチサイズを小さくしてフィードバッグを早くする

  - テストの自動化によるフィードバック

  - 
