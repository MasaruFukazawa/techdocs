オブジェクト指向
========================================

- オブジェクト指向

  - 

- クラス
  
  - インスタンスの大元となるもの。金型

  - クラスを定義するとは、数値 / 配列 / 辞書のようなデータ型を作るということ

  - データ (変数・属性) とデータを処理するコード (関数・メソッド) のセット


- インスタンス

  - 数値 / 配列 / 辞書 のように変数に格納することができる


文法
---------------------------------------

クラス / インスタンスを扱う実装には、以下の２つがある

- クラスを定義する

- クラスからインスタンスを生成する


クラスの定義
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: python

    class MyClass():
        """
	クラスの定義 例
        """

        def __init__(self):
            """
	    初期化メソッド
	    """

	    # クラス・メソッド
	    MyClass.CLASS_VARIABLE = 'CLASS_VARIABLE'
	    
	    # 公開 インスタンス変数
            self.public_variable = 'public_variable'

	    # プロテクト インスタンス変数
	    self._protected_variable = '_protected_variable'

	    # プライベート インスタンス変数
	    self.__private_variable = '__private_variable'


        @classmethod
	der class_method(klassc):
	    """
	    クラス・メソッド例
	    """
	    # メソッド内で行う処理を書いていく

	    
	def public_method(self):
            """
	    公開 メソッド例
	    """
	    # メソッド内で行う処理を書いていく


        def _protected_method(self):
	    """
	    プロテクト メソッド例
	    """
	    # メソッド内で行う処理を書いていく
	    

        def __private_method(self):
	    """
	    プライベート メソッド例
	    """
	    # メソッド内で行う処理を書いていく


インスタンスの生成する
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: python

    my_obj01 = MyClass()

    my_obj02 = MyClass()

    

インスタンスの初期化
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


インスタンスの後始末
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


クラス変数 / インスタンス変数
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


クラスメソッド / インスタンスメソッド
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


アクセス領域
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


継承
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


多重継承
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

